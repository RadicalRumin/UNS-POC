services:
  # Chariot MQTT Broker - Core UNS Message Broker
  chariot-broker:
    build:
      context: ./chariot
      dockerfile: Dockerfile
    container_name: uns-chariot-broker
    privileged: true  # Required for systemd
    ports:
      - "1883:1883"      # MQTT
      - "8081:8080"      # Chariot Web Interface (host:8081 -> container:8080)
      - "8883:8883"      # MQTT SSL
    volumes:
      - ./chariot/config:/etc/chariot
      - ./chariot/data:/var/lib/chariot/data
      - ./chariot/logs:/var/log/chariot
      - /sys/fs/cgroup:/sys/fs/cgroup:ro  # Required for systemd
    networks:
      - uns-network
    restart: unless-stopped
    environment:
      - container=docker
      - CHARIOT_CONFIG_FILE=/etc/chariot/chariot.conf
      # Security Configuration - Change these for production!
      - CHARIOT_ENVIRONMENT=${CHARIOT_ENVIRONMENT:-development}  # development/production/staging
      - CHARIOT_ALLOW_ANONYMOUS=${CHARIOT_ALLOW_ANONYMOUS:-true}  # Set to false for production

  # Payload Processor - Standardizes incoming data to ISA-95 format
  payload-processor:
    build:
      context: ./payload-processor
      dockerfile: Dockerfile
    container_name: uns-payload-processor
    depends_on:
      - chariot-broker
    environment:
      MQTT_BROKER_URL: mqtt://chariot-broker:1883
      LOG_LEVEL: info
    volumes:
      - ./payload-processor/schemas:/app/schemas
    networks:
      - uns-network
    restart: unless-stopped

  # Redis for caching and state management
  redis:
    image: redis:7-alpine
    container_name: uns-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uns-network
    restart: unless-stopped

  # MongoDB for data persistence and historical storage
  mongodb:
    image: mongo:7
    container_name: uns-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: uns_data
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - uns-network
    restart: unless-stopped

  # MQTT Monitor - Real-time topic explorer and message viewer
  mqtt-monitor:
    build:
      context: ./mqtt-monitor
      dockerfile: Dockerfile
    container_name: uns-mqtt-monitor
    ports:
      - "3003:3003"
    depends_on:
      - chariot-broker
    environment:
      MQTT_BROKER_URL: mqtt://chariot-broker:1883
      PORT: 3003
    networks:
      - uns-network
    restart: unless-stopped

volumes:
  chariot_data:
  redis_data:
  mongodb_data:

networks:
  uns-network:
    external: true
    name: uns_uns-network
